// dto/property.dto.ts
import { z } from 'zod';

export const PropertyDto = z.object({
    id: z.any().optional(),
    userId: z.any(),
    images: z.array(z.any()).optional(),
    documents: z.array(z.any()).optional(),
    distributions: z.any().optional(),
    attributes: z.any().optional(),
    adjacencies: z.any().optional(),
    equipments: z.any().optional(),
    utilities: z.any().optional(),
    furnishedAreas: z.any().optional(),
    status: z.string().default('inactive'),
    updatedby: z.any().optional(),
    createdby: z.any().optional(),
    changes: z.any().optional(),
    isFeatured: z.boolean().default(false),
    active: z.boolean().default(false),
    createdAt: z.string().optional(),
    updatedAt: z.string().optional(),
    slug: z.string().optional(),
    // General info
    generalInformation: z.object({
        id: z.string().optional(),
        code: z.string().optional(),
        publicationTitle: z.string(),
        footageGround: z.string(),
        footageBuilding: z.string(),
        description: z.string(),
        propertyType: z.string(),
        zoning: z.string().optional(),
        propertyCondition: z.string().optional(),
        antiquity: z.string().optional(),
        amountOfFloors: z.string().optional(),
        typeOfWork: z.string().optional(),
        propertiesPerFloor: z.string().optional(),
        handoverKeys: z.boolean(),
        termsAndConditionsAccepted: z.boolean(),
        isFurnished: z.boolean(),
        isOccupiedByPeople: z.boolean(),
    }),

    locationInformation: z.object({
        id: z.string().optional(),
        location: z.string().optional(),
        nomenclature: z.string().optional(),
        tower: z.string().optional(),
        amountOfFloors: z.string().optional(),
        isClosedStreet: z.string().optional(),
        country: z.string(),
        state: z.string(),
        municipality: z.string().optional(),
        urbanization: z.string().optional(),
        avenue: z.string().optional(),
        city: z.string().optional(),
        street: z.string().optional(),
        buildingShoppingCenter: z.string().optional(),
        buildingNumber: z.string().optional(),
        floor: z.string().optional(),
        referencePoint: z.string().optional(),
        howToGet: z.string().optional(),
        trunkNumber: z.string().optional(),
        trunkLevel: z.string().optional(),
        parkingNumber: z.string().optional(),
        parkingLevel: z.string().optional(),
    }),

    documentsInformation: z.object({
        id: z.string().optional(),
        propertyDoc: z.boolean().optional(),
        CIorRIF: z.boolean().optional(),
        ownerCIorRIF: z.boolean().optional(),
        spouseCIorRIF: z.boolean().optional(),
        isCatastralRecordSameOwner: z.boolean().optional(),
        condominiumSolvency: z.boolean().optional(),
        mainProperty: z.boolean().optional(),
        mortgageRelease: z.string().optional(),
        condominiumSolvencyDetails: z.string().optional(),
        power: z.string().optional(),
        successionDeclaration: z.string().optional(),
        courtRulings: z.string().optional(),
        catastralRecordYear: z.string().optional(),
        attorneyEmail: z.string().optional(),
        attorneyPhone: z.string().optional(),
        attorneyFirstName: z.string().optional(),
        attorneyLastName: z.string().optional(),
        realStateTax: z.string().optional(),
        owner: z.string().optional(),
    }),

    negotiationInformation: z.object({
        id: z.string().optional(),
        price: z.any(),
        minimumNegotiation: z.any().optional(),
        client: z.string().optional(),
        reasonToSellOrRent: z.string().optional(),
        realstateadvisername: z.string(),
        externaladvisername: z.string(),
        partOfPayment: z.string().optional(),
        operationType: z.string(),
        ally: z.string().optional(),
        allyname: z.string(),
        propertyExclusivity: z.string(),
        realStateAdviser: z.string().optional(),
        additional_price: z.string().optional(),
        externalAdviser: z.string().optional(),
        sellCommission: z.string().optional(),
        rentCommission: z.string().optional(),
        ownerPaysCommission: z.string().optional(),
        mouthToMouth: z.boolean(),
        realStateGroups: z.boolean(),
        realStateWebPages: z.boolean(),
        socialMedia: z.boolean(),
        publicationOnBuilding: z.boolean(),
    }),



});

export const PropertyPatchDto = PropertyDto.partial(); // For patch updates (all fields are optional)

export type PropertyInput = z.infer<typeof PropertyDto>;
export type PropertyPatchInput = z.infer<typeof PropertyPatchDto>;
